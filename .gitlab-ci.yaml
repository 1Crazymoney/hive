stages:
- build
- test
- package

variables:
  GIT_DEPTH: 1
  GIT_SUBMODULE_STRATEGY: recursive
  # pin to specific docker images for build repeatability
  RUNTIME_IMAGE_TAG: "@sha256:e1995e7b44d58436ce97fbcd28a5200d8e877f476c9c4bd3e1cc394c17be050b"
  BUILDER_IMAGE_TAG: "@sha256:13933b563395cc3c6ea8bcbd95b717eb4c9fcc33c4cd7194e620713aca03180d"
  TEST_IMAGE_TAG: "@sha256:fc78e92864645317c82c4703edd5b679c3d22c24bb7253612fb350b629681637"

#******************<JOB TEMPLATES>********************#
#======================<BUILDS>=======================#
.build_node_template: &node_build
  stage: build
  image: "$CI_REGISTRY_IMAGE/builder$BUILDER_IMAGE_TAG"
  script:
    # LOW_MEMORY=OFF CLEAR_VOTES=OFF TESTNET=ON ENABLE_MIRA=OFF
    - ./ciscripts/build.sh $BUILD_OPTS
    - $CREATE_BUILD_DIRECTORY
    - mv build/install-root "$CI_JOB_NAME"
    - mv contrib/hived.run "$CI_JOB_NAME"
    - mv contrib/config-for-docker.ini "$CI_JOB_NAME"
    - $MOVE_DIR
  allow_failure: false
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
    - "$CI_JOB_NAME"
    expire_in: 6 hours

.testnet_node_template: &testnet_node
  variables:
    BUILD_OPTS: OFF OFF ON OFF # LOW_MEMORY=OFF CLEAR_VOTES=OFF TESTNET=ON ENABLE_MIRA=OFF
    CREATE_BUILD_DIRECTORY: mkdir -p $CI_JOB_NAME/tests/unit
    MOVE_DIR: mv build/tests/unit/chain_test build/tests/unit/plugin_test $CI_JOB_NAME/tests/unit #this is only for testnet node
  tags:
     - public-runner-docker

.consensus_node_template: &consensus_node
  variables:
    BUILD_OPTS: ON ON OFF OFF # LOW_MEMORY=ON CLEAR_VOTES=ON TESTNET=OFF ENABLE_MIRA=OFF
    CREATE_BUILD_DIRECTORY: mkdir $CI_JOB_NAME
  tags:
    - public-runner-docker

#=======================<TESTS>=======================#
#chain
.chain_test_template: &chaintest
  stage: test
  image: "$CI_REGISTRY_IMAGE/runtime$RUNTIME_IMAGE_TAG"
  script:
    - ./$SOURCE_NODE/tests/unit/chain_test --log_format=JUNIT --log_sink=chain_test_results.xml --log_level=error > /dev/null 2>&1
  artifacts:
    reports:
      junit: chain_test_results.xml
    when: always
    expire_in: 6 months
  tags:
    - public-runner-docker

#plugin
.plugin_test_template: &plugintest
  stage: test
  image: "$CI_REGISTRY_IMAGE/runtime$RUNTIME_IMAGE_TAG"
  script:
    # note: consider using --result_code=no to force exit code 0 even when tests fail because they currently fail and I want a nice green checkmark
    - ./$SOURCE_NODE/tests/unit/plugin_test --log_format=JUNIT --log_sink=plugin_test_results.xml --log_level=error > /dev/null 2>&1
  artifacts:
    reports:
      junit: plugin_test_results.xml
    when: always
    expire_in: 6 months
  tags:
    - public-runner-docker

#beem
.beem_test_template: &beemdhftest
  stage: test
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    # boilerplate for installing latested beem
    - git clone --depth=1 --single-branch --branch dk-hybrid-operations https://gitlab.syncad.com/hive/beem.git
    - cd beem
    - python3 setup.py install --user
    - cd ..
    # stuff specific to this test
    - mkdir -p build/tests/hive-node-data
    - cd tests/functional/python_tests/dhf_tests
    - "python3 beem_dhf_tests.py initminer initminer 5JNHfZYKGaomSFvd4NUdQ9qMcEAC43kujbfjueTHpVapX1Kzq2n --run-hived $CI_PROJECT_DIR/$SOURCE_NODE/install-root/bin/hived --working-dir=$CI_PROJECT_DIR/build/tests/hive-node-data --no-erase-proposal --junit-output=beem_dhf_test.xml"
    - cd ../hived
    - "python3 hived_hybrid_operations_test.py initminer 5JNHfZYKGaomSFvd4NUdQ9qMcEAC43kujbfjueTHpVapX1Kzq2n --run-hived $CI_PROJECT_DIR/$SOURCE_NODE/install-root/bin/hived --working-dir=$CI_PROJECT_DIR/build/tests/hive-node-data"
  artifacts:
    paths:
    - tests/functional/python_tests/dhf_tests/beem_dhf_tests.log
    - tests/functional/python_tests/hived/hived_hybrid_operations_test.log
    reports:
      junit: tests/functional/python_tests/dhf_tests/beem_dhf_test.xml
    when: always
    expire_in: 6 months
  tags:
    - public-runner-docker

#list proposals
.list_proposals_tests_template: &listproposalstests
  stage: test
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    # boilerplate for installing latested beem
    - git clone --depth=1 --single-branch --branch dk-hybrid-operations https://gitlab.syncad.com/hive/beem.git
    - cd beem
    - python3 setup.py install --user
    - cd ..
    # stuff specific to this test
    - mkdir -p build/tests/hive-node-data
    - cd tests/functional/python_tests/dhf_tests
    - "python3 list_proposals_tests.py initminer initminer 5JNHfZYKGaomSFvd4NUdQ9qMcEAC43kujbfjueTHpVapX1Kzq2n --run-hived $CI_PROJECT_DIR/$SOURCE_NODE/install-root/bin/hived --working-dir=$CI_PROJECT_DIR/build/tests/hive-node-data --junit-output=list_proposals_tests.xml"
  artifacts:
    paths:
    - tests/functional/python_tests/dhf_tests/hdf_list_proposal.log
    reports:
      junit: tests/functional/python_tests/dhf_tests/list_proposals_tests.xml
    when: always
    expire_in: 6 months
  tags:
    - public-runner-docker

#hived options
.hived_options_tests_template: &hivedoptstest
  stage: test
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - cd tests/functional/python_tests/hived
    - "python3 hived_options_tests.py --run-hived $CI_PROJECT_DIR/$SOURCE_NODE/install-root/bin/hived"
  tags:
    - public-runner-docker

#====================<PACKAGING>====================#
.packaging_nodes_template: &node_package
  stage: package
  image: docker:19.03.11
  services:
    - docker:19.03.11-dind
  script:
    - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - "docker build -f ciscripts/Dockerfile.ci --target=$TARGET --build-arg CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE --build-arg RUNTIME_IMAGE_TAG=$RUNTIME_IMAGE_TAG --tag $CI_REGISTRY_IMAGE/$TARGET:$CI_COMMIT_SHORT_SHA ."
    - "docker push $CI_REGISTRY_IMAGE/$TARGET:$CI_COMMIT_SHORT_SHA"
    - "echo ===> the consensus node image for this build is: $CI_REGISTRY_IMAGE/$TARGET:$CI_COMMIT_SHORT_SHA"
  tags:
    - public-runner-docker

#*****************</JOB TEMPLATES>********************#


#*********************<BUILDS>**********************#
#====================DEVELOPMENT=====================
testnet_node_development_build:
  <<: *node_build
  <<: *testnet_node
  environment: development
  resource_group: testnet
  except:
    - master
    - merge_request
    - 0.24.0
    - schedules
  when: manual

consensus_development_build:
  <<: *node_build
  <<: *consensus_node
  environment: development
  resource_group: consensus
  except:
    - master
    - merge_request
    - 0.24.0
    - schedules
  when: manual

#======================STAGING=======================
testnet_node_staging_build:
  <<: *node_build
  <<: *testnet_node
  environment: staging
  resource_group: testnet
  only:
    - master
    - merge_request
    - 0.24.0
    - schedules

consensus_staging_build:
  <<: *node_build
  <<: *consensus_node
  environment: staging
  resource_group: consensus
  only:
    - master
    - merge_request
    - 0.24.0
    - schedules

#********************</BUILDS>**********************#


#*********************<TESTS>***********************#
#====================DEVELOPMENT=====================
development_chain_test:
  variables:
    SOURCE_NODE: testnet_node_development_build
    GIT_STRATEGY: none
  needs:
    - job: testnet_node_development_build
      artifacts: true
  <<: *chaintest
  except:
    - master
    - merge_request
    - 0.24.0
    - schedules

development_plugin_test:
  variables:
    SOURCE_NODE: testnet_node_development_build
    GIT_STRATEGY: none
  needs:
    - job: testnet_node_development_build
      artifacts: true
  <<: *plugintest
  except:
    - master
    - merge_request
    - 0.24.0
    - schedules

development_beem_dhf_test:
  variables:
    SOURCE_NODE: testnet_node_development_build
    PYTHONPATH: $CI_PROJECT_DIR/tests/functional
  needs:
    - job: testnet_node_development_build
      artifacts: true
  <<: *beemdhftest
  except:
    - master
    - merge_request
    - 0.24.0
    - schedules

development_list_proposals_tests:
  variables:
    SOURCE_NODE: testnet_node_development_build
    PYTHONPATH: $CI_PROJECT_DIR/tests/functional
  needs:
    - job: testnet_node_development_build
      artifacts: true
  <<: *listproposalstests

develompment_hived_options_tests:
  variables:
    SOURCE_NODE: testnet_node_development_build
    PYTHONPATH: $CI_PROJECT_DIR/tests/functional
  needs:
    - job: testnet_node_development_build
      artifacts: true
  <<: *hivedoptstest
  except:
    - master
    - merge_request
    - 0.24.0
    - schedules


#======================STAGING=======================
staging_chain_test:
  variables:
    SOURCE_NODE: testnet_node_staging_build
    GIT_STRATEGY: none
  needs:
    - job: testnet_node_staging_build
      artifacts: true
  <<: *chaintest
  only:
    - master
    - merge_request
    - 0.24.0
    - schedules

staging_plugin_test:
  variables:
    SOURCE_NODE: testnet_node_staging_build
    GIT_STRATEGY: none
  needs:
    - job: testnet_node_staging_build
      artifacts: true
  <<: *plugintest
  only:
    - master
    - merge_request
    - 0.24.0
    - schedules

staging_beem_dhf_test:
  variables:
    SOURCE_NODE: testnet_node_staging_build
    PYTHONPATH: $CI_PROJECT_DIR/tests/functional
  needs:
    - job: testnet_node_staging_build
      artifacts: true
  <<: *beemdhftest
  only:
    - master
    - merge_request
    - 0.24.0
    - schedules

staging_list_proposals_tests:
  variables:
    SOURCE_NODE: testnet_node_staging_build
    PYTHONPATH: $CI_PROJECT_DIR/tests/functional
  needs:
    - job: testnet_node_staging_build
      artifacts: true
  <<: *listproposalstests
  only:
    - master
    - merge_request
    - 0.24.0
    - schedules

staging_hived_options_tests:
  variables:
    SOURCE_NODE: testnet_node_staging_build
    PYTHONPATH: $CI_PROJECT_DIR/tests/functional
  needs:
    - job: testnet_node_staging_build
      artifacts: true
  <<: *hivedoptstest
  only:
    - master
    - merge_request
    - 0.24.0
    - schedules

replay-test:
  stage: test
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  variables:
    GIT_STRATEGY: none
    STOP_REPLAY_AT: 2000000
  needs:
    - job: consensus_development_build
      artifacts: true
  script:
    - mkdir ./replay 
    - mkdir ./replay/blockchain
    - cp ./consensus_development_build/install-root/bin/hived ./replay
    - cp ./consensus_development_build/install-root/bin/cli_wallet ./replay
    - cp ./consensus_development_build/config-for-docker.ini ./replay
    - mv ./replay/config-for-docker.ini ./replay/config.ini
    - cp ./consensus_development_build/install-root/bin/truncate_block_log ./replay
    - ./replay/truncate_block_log /blockchain/block_log $CI_PROJECT_DIR/replay/blockchain/block_log $STOP_REPLAY_AT
    - ./replay/hived --replay-blockchain --set-benchmark-interval 1000000 --stop-replay-at-block $STOP_REPLAY_AT --exit-after-replay --advanced-benchmark --dump-memory-details  -d ./replay --shared-file-dir ./replay 2>&1 | tee $CI_PROJECT_DIR/replay/replay.log
    #- ../ciscripts/replay.sh 100000 1000000 #benchmark interval = 1000000 / stop replay at block $STOP_REPLAY_AT
  artifacts:
    paths:
    - $CI_PROJECT_DIR/replay/replay.log
    reports:
    when: always
    expire_in: 6 months
#  only:
#    - master
#    - merge_request
#    - 0.24.0
#    - schedules
  tags:
    - public-runner-docker
    - hived-for-tests
    
#**********************</TESTS>*********************#


#********************<PACKAGING>********************#
#====================DEVELOPMENT=====================
package_development_consensus_node:
  variables:
    DOCKER_BUILDKIT: 1
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
    TARGET: consensus_development_node
    TARGET_JOB: consensus_development_build
  <<: *node_package
  needs:
    - job: consensus_development_build
      artifacts: true
  environment: development
  resource_group: consensus
  except:
    - master
    - merge_request
    - 0.24.0
    - schedules
  tags:
    - public-runner-docker

#======================STAGING=======================
package_staging_consensus_node:
  variables:
    DOCKER_BUILDKIT: 1
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
    TARGET: consensus_staging_node
    TARGET_JOB: consensus_staging_build
  <<: *node_package
  needs:
    - job: consensus_staging_build
      artifacts: true
  environment: staging
  resource_group: consensus
  only:
    - master
    - merge_request
    - 0.24.0
    - schedules

#******************</PACKAGING>*********************#

